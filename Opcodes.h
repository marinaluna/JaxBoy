#pragma once
#define OP2        "\e[31m%02Xh\e[0m"
#define OP4        "\e[31m%02Xh\e[0m"

static const char* OPCODE_LOOKUP[256] = {
    "NOP",
    "LD BC, " OP4,
    "LD (BC),A",
    "INC BC",
    "INC B",
    "DEC B",
    "LD B, " OP2,
    "RLCA",
    "LD (" OP4 "),SP",
    "ADD HL,BC",
    "LD A,(BC)",
    "DEC BC",
    "INC C",
    "DEC C",
    "LD C, " OP2,
    "RRCA",

    "STOP",
    "LD DE, " OP4,
    "LD (DE),A",
    "INC DE",
    "INC D",
    "DEC D",
    "LD D, " OP2,
    "RLA",
    "JR " OP2,
    "ADD HL,DE",
    "LD A,(DE)",
    "DEC DE",
    "INC E",
    "DEC E",
    "LD E, " OP2,
    "RRA",

    "JR NZ, " OP2,
    "LD HL, " OP4,
    "LD (HL+),A",
    "INC HL",
    "INC H",
    "DEC H",
    "LD H, " OP2,
    "DAA",
    "JR Z, " OP2,
    "ADD HL,HL",
    "LD A,(HL+)",
    "DEC HL",
    "INC L",
    "DEC L",
    "LD L, " OP2,
    "CPL",

    "JR NC, " OP2,
    "LD SP, " OP4,
    "LD (HL-),A",
    "INC SP",
    "INC (HL)",
    "DEC (HL)",
    "LD (HL), " OP2,
    "SCF",
    "JR C, " OP2,
    "ADD HL,SP",
    "LD A,(HL-)",
    "DEC SP",
    "INC A",
    "DEC A",
    "LD A, " OP2,
    "CCF",

    "LD B,B",
    "LD B,C",
    "LD B,D",
    "LD B,E",
    "LD B,H",
    "LD B,L",
    "LD B,(HL)",
    "LD B,A",
    "LD C,B",
    "LD C,C",
    "LD C,D",
    "LD C,E",
    "LD C,H",
    "LD C,L",
    "LD C,(HL)",
    "LD C,A",

    "LD D,B",
    "LD D,C",
    "LD D,D",
    "LD D,E",
    "LD D,H",
    "LD D,L",
    "LD D,(HL)",
    "LD D,A",
    "LD E,B",
    "LD E,C",
    "LD E,D",
    "LD E,E",
    "LD E,H",
    "LD E,L",
    "LD E,(HL)",
    "LD E,A",

    "LD H,B",
    "LD H,C",
    "LD H,D",
    "LD H,E",
    "LD H,H",
    "LD H,L",
    "LD H,(HL)",
    "LD H,A",
    "LD L,B",
    "LD L,C",
    "LD L,D",
    "LD L,E",
    "LD L,H",
    "LD L,L",
    "LD L,(HL)",
    "LD L,A",

    "LD (HL),B",
    "LD (HL),C",
    "LD (HL),D",
    "LD (HL),E",
    "LD (HL),H",
    "LD (HL),L",
    "HALT",
    "LD (HL),A",
    "LD A,B",
    "LD A,C",
    "LD A,D",
    "LD A,E",
    "LD A,H",
    "LD A,L",
    "LD A,(HL)",
    "LD A,A",

    "ADD A,B",
    "ADD A,C",
    "ADD A,D",
    "ADD A,E",
    "ADD A,H",
    "ADD A,L",
    "ADD A,(HL)",
    "ADD A,A",
    "ADC A,B",
    "ADC A,C",
    "ADC A,D",
    "ADC A,E",
    "ADC A,H",
    "ADC A,L",
    "ADC A,(HL)",
    "ADC A,A",

    "SUB B",
    "SUB C",
    "SUB D",
    "SUB E",
    "SUB H",
    "SUB L",
    "SUB (HL)",
    "SUB A",
    "SBC A,B",
    "SBC A,C",
    "SBC A,D",
    "SBC A,E",
    "SBC A,H",
    "SBC A,L",
    "SBC A,(HL)",
    "SBC A,A",

    "AND B",
    "AND C",
    "AND D",
    "AND E",
    "AND H",
    "AND L",
    "AND (HL)",
    "AND A",
    "XOR B",
    "XOR C",
    "XOR D",
    "XOR E",
    "XOR H",
    "XOR L",
    "XOR (HL)",
    "XOR A",

    "OR B",
    "OR C",
    "OR D",
    "OR E",
    "OR H",
    "OR L",
    "OR (HL)",
    "OR A",
    "CP B",
    "CP C",
    "CP D",
    "CP E",
    "CP H",
    "CP L",
    "CP (HL)",
    "CP A",

    "RET NZ",
    "POP BC",
    "JP NZ, " OP4,
    "JP " OP4,
    "CALL NZ, " OP4,
    "PUSH BC",
    "ADD A, " OP2,
    "RST 00H",
    "RET Z",
    "RET",
    "JP Z, " OP4,
    "CB EXT",
    "CALL Z, " OP4,
    "CALL " OP4,
    "ADC A, " OP2,
    "RST 08H",

    "RET NC",
    "POP DE",
    "JP NC, " OP4,
    "UNDEFINED",
    "CALL NC, " OP4,
    "PUSH DE",
    "SUB " OP2,
    "RST 10H",
    "RET C",
    "RETI",
    "JP C, " OP4,
    "UNDEFINED",
    "CALL C, " OP4,
    "UNDEFINED",
    "SBC A, " OP2,
    "RST 18H",

    "LD (FF+" OP2 "),A",
    "POP HL",
    "LD (FF00h+C),A",
    "UNDEFINED",
    "UNDEFINED",
    "PUSH HL",
    "AND " OP2,
    "RST 20H",
    "ADD SP, " OP2,
    "JP (HL)",
    "LD (" OP4 "),A",
    "UNDEFINED",
    "UNDEFINED",
    "UNDEFINED",
    "XOR " OP2,
    "RST 28H",

    "LD A,(FF+" OP2 ")",
    "POP AF",
    "LD A,(C)",
    "DI",
    "UNDEFINED",
    "PUSH AF",
    "OR " OP2,
    "RST 30H",
    "LD HL,SP+" OP2,
    "LD SP,HL",
    "LD A,(" OP4 ")",
    "EI",
    "UNDEFINED",
    "UNDEFINED",
    "CP " OP2,
    "RST 38H"
};
